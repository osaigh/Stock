@model Stock.IdentityServer.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<hr />
<section>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                @*<form asp-controller="Auth" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                    @foreach (var externalProvider in Model.ExternalProviders)
                    {
                        <div>
                            <button type="submit" class="btn btn-primary" name="provider" value="@externalProvider.Name">@externalProvider.Name</button>
                        </div>
                    }
                </form>*@
                <br/>
                <hr/>
                <form asp-action="Login" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="ReturnUrl"/>
                    <div class="form-group">
                        <label asp-for="Username" class="control-label"></label>
                        <input asp-for="Username" class="form-control"/>
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" type="password"/>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<div>
    <a asp-route-returnUrl="@Model.ReturnUrl">Register</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
